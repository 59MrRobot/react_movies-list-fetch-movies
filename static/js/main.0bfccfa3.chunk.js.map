{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onSetMovies","useState","selectedMovie","setSelectedMovie","showMovie","setShowMovie","query","setQuery","loadMovie","a","movieTitle","fetch","then","response","json","loadedMovie","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","every","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC9BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,6BCJd,IAAMC,EAA6B,SAAC,GAA6B,IAA3BH,EAA0B,EAA1BA,OAAQI,EAAkB,EAAlBA,YAQnD,EAA0CC,mBAPrB,CACnBV,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,KAGV,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,sECrBKC,EDsBcJ,ECrB9BK,MAAM,GAAD,OAHE,+CAGF,OAAcD,IACvBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDmBX,OACVC,EADU,OAGhBZ,EAAiBY,GAHD,iCCrBb,IAAkBL,IDqBL,OAAH,qDAMf,OACE,qCACE,uBAAMrB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,yBAIA,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAU,kBACV+B,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAWf,EAASe,EAAMC,OAAOH,YAI/C,mBAAG/B,UAAU,iBAAb,qDAKF,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACV,UAAQ,OACRmC,QAAS,WACPhB,IACAH,GAAa,IANjB,4BAaF,qBAAKhB,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBACV,UAAQ,MACRmC,QAAS,WACH5B,EAAO6B,OACT,SAAArC,GAAK,OAAIA,EAAMU,SAAWI,EAAcJ,YAExCE,EAAYE,GACZK,EAAS,IACTF,GAAa,KAVnB,qCAoBN,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCe,GACC,cAAC,EAAD,CAAWhB,MAAOc,WEvFfwB,EAAgB,WAC3B,MAA4BzB,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe+B,EAAf,KAMA,OACE,sBAAKtC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEO,OAAQA,EACRI,YAZgB,SAACZ,GACvBuC,EAAU,GAAD,mBAAK/B,GAAL,CAAaR,cCL1BwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0bfccfa3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n  onSetMovies: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ movies, onSetMovies }) => {\n  const defaultMovie = {\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  };\n\n  const [selectedMovie, setSelectedMovie] = useState<Movie>(defaultMovie);\n  const [showMovie, setShowMovie] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const loadMovie = async () => {\n    const loadedMovie = await getMovie(query);\n\n    setSelectedMovie(loadedMovie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              onClick={() => {\n                loadMovie();\n                setShowMovie(true);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              onClick={() => {\n                if (movies.every(\n                  movie => movie.imdbID !== selectedMovie.imdbID,\n                )) {\n                  onSetMovies(selectedMovie);\n                  setQuery('');\n                  setShowMovie(false);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {showMovie && (\n          <MovieCard movie={selectedMovie} />)}\n      </div>\n    </>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=b2241fd4&t=';\n\nexport function getMovie(movieTitle: string): Promise<Movie> {\n  return fetch(`${API_URL}${movieTitle}`)\n    .then(response => response.json());\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const setMovieHandler = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          onSetMovies={setMovieHandler}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}